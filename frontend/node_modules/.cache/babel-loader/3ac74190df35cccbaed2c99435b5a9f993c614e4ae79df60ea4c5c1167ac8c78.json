{"ast":null,"code":"import axios from 'axios';\n\n// Get the API URL from environment variables\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n/**\r\n * API service for handling backend requests\r\n */\nconst ApiService = {\n  /**\r\n   * Get explanation and quiz for a topic at specified level\r\n   * @param {string} topic - The topic to learn about\r\n   * @param {string} level - The learning level (child, teen, adult)\r\n   * @returns {Promise} - The API response with explanation and quiz questions\r\n   */\n  explainTopic: async (topic, level) => {\n    try {\n      const response = await axios.post(`${API_URL}/api/explain`, {\n        topic,\n        level\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Format and rethrow the error\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to connect to the server. Please check your connection and try again.';\n      throw new Error(errorMessage);\n    }\n  },\n  /**\r\n   * Check if the API is available\r\n   * @returns {Promise} - The health check response\r\n   */\n  healthCheck: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/api/health`);\n      return response.data;\n    } catch (error) {\n      throw new Error('API server is not reachable');\n    }\n  }\n};\nexport default ApiService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","ApiService","explainTopic","topic","level","response","post","data","error","_error$response","_error$response$data","errorMessage","Error","healthCheck","get"],"sources":["C:/Users/felic/OneDrive/Desktop/Hackathon AIML/studyspark/frontend/src/App.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Get the API URL from environment variables\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n/**\r\n * API service for handling backend requests\r\n */\r\nconst ApiService = {\r\n  /**\r\n   * Get explanation and quiz for a topic at specified level\r\n   * @param {string} topic - The topic to learn about\r\n   * @param {string} level - The learning level (child, teen, adult)\r\n   * @returns {Promise} - The API response with explanation and quiz questions\r\n   */\r\n  explainTopic: async (topic, level) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/explain`, {\r\n        topic,\r\n        level\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      // Format and rethrow the error\r\n      const errorMessage = error.response?.data?.error || \r\n                          'Failed to connect to the server. Please check your connection and try again.';\r\n      throw new Error(errorMessage);\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Check if the API is available\r\n   * @returns {Promise} - The health check response\r\n   */\r\n  healthCheck: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/health`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('API server is not reachable');\r\n    }\r\n  }\r\n};\r\n\r\nexport default ApiService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAExE;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACjB;AACF;AACA;AACA;AACA;AACA;EACEC,YAAY,EAAE,MAAAA,CAAOC,KAAK,EAAEC,KAAK,KAAK;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,cAAc,EAAE;QAC1DM,KAAK;QACLC;MACF,CAAC,CAAC;MAEF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd;MACA,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAC5B,8EAA8E;MAClG,MAAM,IAAII,KAAK,CAACD,YAAY,CAAC;IAC/B;EACF,CAAC;EAED;AACF;AACA;AACA;EACEE,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMT,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,aAAa,CAAC;MACzD,OAAOQ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAII,KAAK,CAAC,6BAA6B,CAAC;IAChD;EACF;AACF,CAAC;AAED,eAAeX,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}